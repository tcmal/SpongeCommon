{
    "required": true,
    "minVersion": "0.7.10",
    "package": "org.spongepowered.common.mixin.core",
    "refmap": "mixins.common.refmap.json",
    "plugin": "org.spongepowered.common.mixin.plugin.CorePlugin",
    "target": "@env(DEFAULT)",
    "compatibilityLevel": "JAVA_8",
    "mixins": [
        "MixinBootstrapAnonInner10",
        "MixinBootstrapAnonInner11",
        "advancement.MixinAdvancement",
        "advancement.MixinAdvancementList",
        "advancement.MixinAdvancementManager",
        "advancement.MixinAdvancementProgress",
        "advancement.MixinAdvancementTreeNode",
        "advancement.MixinCriteriaTriggers",
        "advancement.MixinCriterion",
        "advancement.MixinCriterionProgress",
        "advancement.MixinDisplayInfo",
        "advancement.MixinFrameType",
        "advancement.MixinICriterionInstance",
        "advancement.MixinICriterionTrigger",
        "advancement.MixinICriterionTriggerListener",
        "advancement.MixinPlayerAdvancements",
        "authlib.MixinGameProfile",
        "authlib.MixinProperty",
        "authlib.MixinPropertyMap",
        "ban.MixinBanEntry",
        "ban.MixinIPBanEntry",
        "ban.MixinUserBanEntry",
        "block.MixinBehaviorProjectileDispense",
        "block.MixinBlock",
        "block.MixinBlockAnvil",
        "block.MixinBlockAbstractBanner",
        "block.MixinBlockBannerWall",
        "block.MixinBlockBanner",
        "block.MixinBlockBeacon",
        "block.MixinBlockBed",
        "block.MixinBlockBrewingStand",
        "block.MixinBlockButton",
        "block.MixinBlockCactus",
        "block.MixinBlockCake",
        "block.MixinBlockCarpet",
        "block.MixinBlockChest",
        "block.MixinBlockCocoa",
        "block.MixinBlockShulkerBox",
        "block.MixinBlockCommandBlock",
        "block.MixinBlockConcretePowder",
        "block.MixinBlockCrops",
        "block.MixinBlockDaylightDetector",
        "block.MixinBlockDirectional",
        "block.MixinBlockDirtSnowy",
        "block.MixinBlockDispenser",
        "block.MixinBlockDoor",
        "block.MixinBlockDoublePlant",
        "block.MixinBlockDoubleStoneSlab",
        "block.MixinBlockDoubleWoodSlab",
        "block.MixinBlockDropper",
        "block.MixinBlockDynamicLiquid",
        "block.MixinBlockLiquid",
        "block.MixinBlockEnderChest",
        "block.MixinBlockEndPortalFrame",
        "block.MixinBlockEventData",
        "block.MixinBlockFalling",
        "block.MixinBlockFarmland",
        "block.MixinBlockFence",
        "block.MixinBlockFenceGate",
        "block.MixinBlockFire",
        "block.MixinBlockFlowerPot",
        "block.MixinBlockFurnace",
        "block.MixinBlockGrass",
        "block.MixinBlockRotatedPillar",
        "block.MixinBlockHorizontal",
        "block.MixinBlockHopper",
        "block.MixinBlockHugeMushroom",
        "block.MixinBlockLadder",
        "block.MixinBlockLeaves",
        "block.MixinBlockLever",
        "block.MixinBlockLog",
        "block.MixinBlockMagma",
        "block.MixinBlockMycelium",
        "block.MixinBlockNetherWart",
        "block.MixinBlockPane",
        "block.MixinBlockPistonBase",
        "block.MixinBlockPistonExtension",
        "block.MixinBlockPistonMoving",
        "block.MixinBlockPlanks",
        "block.MixinBlockPortal",
        "block.MixinBlockPressurePlate",
        "block.MixinBlockPressurePlateWeighted",
        "block.MixinBlockPrismarine",
        "block.MixinBlockCarvedPumpkin",
        "block.MixinBlockQuartz",
        "block.MixinBlockRailBase",
        "block.MixinBlockRailDetector",
        "block.MixinBlockRailPowered",
        "block.MixinBlockRedSandstone",
        "block.MixinBlockRedstoneComparator",
        "block.MixinBlockRedstoneDiode",
        "block.MixinBlockRedstoneRepeater",
        "block.MixinBlockRedstoneWire",
        "block.MixinBlockReed",
        "block.MixinBlockSand",
        "block.MixinBlockSandStone",
        "block.MixinBlockSapling",
        "block.MixinBlockSign",
        "block.MixinBlockSilverfish",
        "block.MixinBlockSkull",
        "block.MixinBlockSnowLayer",
        "block.MixinBlockSponge",
        "block.MixinBlockStainedGlass",
        "block.MixinBlockStainedGlassPane",
        "block.MixinBlockStairs",
        "block.MixinBlockStandingSign",
        "block.MixinBlockStaticLiquid",
        "block.MixinBlockStem",
        "block.MixinBlockStone",
        "block.MixinBlockStoneBrick",
        "block.MixinBlockStoneSlab",
        "block.MixinBlockTallGrass",
        "block.MixinBlockTNT",
        "block.MixinBlockTorch",
        "block.MixinBlockTrapDoor",
        "block.MixinBlockTripWire",
        "block.MixinBlockTripWireHook",
        "block.MixinBlockVine",
        "block.MixinBlockWall",
        "block.MixinBlockWallSign",
        "block.MixinBlockWoodSlab",
        "block.MixinDyeableBlock",
        "block.MixinSoundType",
        "block.properties.MixinIProperty",
        "block.properties.MixinBooleanProperty",
        "block.properties.MixinEnumProperty",
        "block.properties.MixinAbstractProperty",
        "block.properties.MixinIntegerProperty",
        "block.state.MixinIBlockState",
        "block.state.MixinStateImplementation",
        "brigadier.context.MixinCommandContextBuilder",
        "brigadier.suggestion.MixinSuggestionsBuilder",
        "brigadier.MixinStringReader",
        "data.MixinCustomDataHolder",
        "data.MixinDataHolder",
        "data.MixinPropertyHolder",
        "data.types.MixinPaintingType",
        "data.types.MixinDoorHingeSide",
        "data.types.MixinRailShape",
        "data.types.MixinBlockRedstoneComparatorMode",
        "data.types.MixinBlockRedstoneWireAttachPosition",
        "data.types.MixinBossInfoColor",
        "data.types.MixinBossInfoOverlay",
        "data.types.MixinEntityArrowPickupStatus",
        "data.types.MixinEnumBannerPattern",
        "data.types.MixinEnumChatVisibility",
        "data.types.MixinEnumDifficulty",
        "data.types.MixinEnumDyeColor",
        "data.types.MixinEnumLogAxis",
        "data.types.MixinFishType",
        "data.types.MixinGameType",
        "entity.IMixinAreaEffectCloud",
        "entity.MixinArmorEquipable",
        "entity.MixinEntity",
        "entity.MixinEntityAreaEffectCloud",
        "entity.MixinArmorEquipable",
        "entity.MixinEntityAgeable",
        "entity.MixinEntityCreature",
        "entity.MixinEntityFlying",
        "entity.MixinEntityHanging",
        "entity.MixinEntityLeashKnot",
        "entity.MixinEntityLiving",
        "entity.MixinEntityLivingBase",
        "entity.MixinEntityMinecartCommandBlock",
        "entity.MixinEntityTracker",
        "entity.MixinEntityTrackerEntry",
        "entity.MixinMultiPartEntityPart",
        "entity.MixinGriefer",
        "entity.MixinRanger",
        "entity.MixinEntityShulkerBullet",
        "entity.ai.MixinEntityAIAttackMelee",
        "entity.ai.MixinEntityAIAttackRanged",
        "entity.ai.MixinEntityAIAvoidEntity",
        "entity.ai.MixinEntityAIBase",
        "entity.ai.MixinEntityAIBreakDoor",
        "entity.ai.MixinEntityAIEatGrass",
        "entity.ai.MixinEntityAIHarvestFarmland",
        "entity.ai.MixinEntityAILookIdle",
        "entity.ai.MixinEntityAIMate",
        "entity.ai.MixinEntityAINearestAttackableTarget",
        "entity.ai.MixinEntityAITasks",
        "entity.ai.MixinEntityAIRunAroundLikeCrazy",
        "entity.ai.MixinEntityAISwimming",
        "entity.ai.MixinEntityAITarget",
        "entity.ai.MixinEntityAIWander",
        "entity.ai.MixinEntityAIWatchClosest",
        "entity.ai.MixinEntityBlazeAIFireballAttack",
        "entity.ai.MixinEntityGhastAIFireballAttack",
        "entity.ai.MixinEntityEndermanAIPlaceBlock",
        "entity.ai.MixinEntityEndermanAITakeBlock",
        "entity.ai.MixinEntityMinecartMobSpawner",
        "entity.ai.MixinEntityRabbitAIRaidFarm",
        "entity.ai.MixinEntitySilverfishAIHideInStone",
        "entity.ai.MixinEntitySilverfishAISummon",
        "entity.boss.dragon.phase.MixinIPhase",
        "entity.boss.dragon.phase.MixinPhaseType",
        "entity.boss.dragon.phase.MixinPhaseManager",
        "entity.boss.dragon.phase.MixinPhaseType",
        "entity.boss.MixinEntityDragon",
        "entity.boss.MixinEntityWither",
        "entity.effect.MixinEntityLightningBolt",
        "entity.effect.MixinEntityWeatherEffect",
        "entity.human.MixinEntityHuman",
        "entity.item.MixinEntityArmorStand",
        "entity.item.MixinEntityBoat",
        "entity.item.MixinEntityEnderCrystal",
        "entity.item.MixinEntityEnderEye",
        "entity.item.MixinEntityEnderPearl",
        "entity.item.MixinEntityExpBottle",
        "entity.item.MixinEntityFallingBlock",
        "entity.item.MixinEntityFireworkRocket",
        "entity.item.MixinEntityItem",
        "entity.item.MixinEntityItemFrame",
        "entity.item.MixinEntityMinecart",
        "entity.item.MixinEntityMinecartChest",
        "entity.item.MixinEntityMinecartContainer",
        "entity.item.MixinEntityMinecartEmpty",
        "entity.item.MixinEntityMinecartFurnace",
        "entity.item.MixinEntityMinecartHopper",
        "entity.item.MixinEntityMinecartTNT",
        "entity.item.MixinEntityPainting",
        "entity.item.MixinEntityTNTPrimed",
        "entity.item.MixinEntityXPOrb",
        "entity.monster.MixinAbstractSkeleton",
        "entity.monster.MixinEntityBlaze",
        "entity.monster.MixinEntityCaveSpider",
        "entity.monster.MixinEntityCreeper",
        "entity.monster.MixinEntityEnderman",
        "entity.monster.MixinEntityEndermite",
        "entity.monster.MixinEntityEvoker",
        "entity.monster.MixinEntityGhast",
        "entity.monster.MixinEntityGiantZombie",
        "entity.monster.MixinEntityGolem",
        "entity.monster.MixinEntityGuardian",
        "entity.monster.MixinEntityHusk",
        "entity.monster.MixinEntityIronGolem",
        "entity.monster.MixinEntityMagmaCube",
        "entity.monster.MixinEntityMob",
        "entity.monster.MixinEntityPigZombie",
        "entity.monster.MixinEntityShulker",
        "entity.monster.MixinEntitySilverfish",
        "entity.monster.MixinEntitySkeleton",
        "entity.monster.MixinEntitySlime",
        "entity.monster.MixinEntitySnowman",
        "entity.monster.MixinEntitySpider",
        "entity.monster.MixinEntityStray",
        "entity.monster.MixinEntityVex",
        "entity.monster.MixinEntityVindicator",
        "entity.monster.MixinEntityWitch",
        "entity.monster.MixinEntityWitherSkeleton",
        "entity.monster.MixinEntityZombie",
        "entity.monster.MixinEntityZombieVillager",
        "entity.passive.MixinEntityAmbientCreature",
        "entity.passive.IMixinEntityVillager$ITradeList",
        "entity.passive.MixinAbstractHorse",
        "entity.passive.MixinEntityAnimal",
        "entity.passive.MixinEntityBat",
        "entity.passive.MixinEntityChicken",
        "entity.passive.MixinEntityCow",
        "entity.passive.MixinEntityDonkey",
        "entity.passive.MixinEntityHorse",
        "entity.passive.MixinEntityLlama",
        "entity.passive.MixinEntityMooshroom",
        "entity.passive.MixinEntityMule",
        "entity.passive.MixinEntityOcelot",
        "entity.passive.MixinEntityParrot",
        "entity.passive.MixinEntityPig",
        "entity.monster.MixinEntityPolarBear",
        "entity.passive.MixinEntityRabbit",
        "entity.passive.MixinEntitySheep",
        "entity.passive.MixinEntitySkeletonHorse",
        "entity.passive.MixinEntitySquid",
        "entity.passive.MixinEntityTameable",
        "entity.passive.MixinEntityVillager",
        "entity.passive.MixinEntityVillagerEmeraldForItems",
        "entity.passive.MixinEntityVillagerItemAndEmeraldToItem",
        "entity.passive.MixinEntityVillagerListEnchantedBookForEmeralds",
        "entity.passive.MixinEntityVillagerListEnchantedItemForEmeralds",
        "entity.passive.MixinEntityVillagerListItemForEmeralds",
        "entity.passive.MixinEntityWaterMob",
        "entity.passive.MixinEntityWolf",
        "entity.passive.MixinEntityZombieHorse",
        "entity.player.MixinEntityPlayer",
        "entity.player.MixinEntityPlayerMP",
        "entity.player.MixinInventoryPlayer",
        "entity.player.MixinSpongeUser",
        "entity.player.MixinSpongeUserInventory",
        "entity.projectile.MixinEntityArrow",
        "entity.projectile.MixinEntityTippedArrow",
        "entity.projectile.MixinEntitySpectralArrow",
        "entity.projectile.MixinEntityDragonFireball",
        "entity.projectile.MixinEntityEgg",
        "entity.projectile.MixinEntityFireball",
        "entity.projectile.MixinEntityFishHook",
        "entity.projectile.MixinEntityLargeFireball",
        "entity.projectile.MixinEntityLlamaSpit",
        "entity.projectile.MixinEntityPotion",
        "entity.projectile.MixinEntitySmallFireball",
        "entity.projectile.MixinEntitySnowball",
        "entity.projectile.MixinEntityThrowable",
        "entity.projectile.MixinEntityWitherSkull",
        "event.cause.entity.damage.MixinMinecraftBlockDamageSource",
        "event.cause.entity.damage.MixinMinecraftFallingBlockDamageSource",
        "inventory.MixinInventoryBasic",
        "inventory.MixinInventoryCrafting",
        "inventory.MixinInventoryEnderChest",
        "inventory.MixinInventoryHelper",
        "inventory.MixinInventoryLargeChest",
        "item.MixinEnchantment",
        "item.MixinItem",
        "item.MixinItemArmorMaterial",
        "item.MixinItemBlock",
        "item.MixinItemEnderEye",
        "item.MixinItemFirework",
        "item.MixinItemFishingRod",
        "item.MixinItemMap",
        "item.MixinItemStack",
        "item.MixinItemToolMaterial",
        "item.data.MixinItemPotion",
        "item.data.MixinItemWritableBook",
        "item.data.MixinItemWrittenBook",
        "item.inventory.MixinCarrierContainerEnchantment",
        "item.inventory.MixinCarrierContainerRepair",
        "item.inventory.MixinCarrierContainerWorkbench",
        "item.inventory.MixinContainer",
        "item.inventory.MixinContainerCanInteract",
        "item.inventory.MixinContainerCrafting",
        "item.inventory.MixinContainerHorseChest",
        "item.inventory.MixinContainerPlayer",
        "item.inventory.MixinContainerRepair",
        "item.inventory.MixinContainerWorkbench",
        "item.inventory.MixinCustomInventory",
        "item.inventory.MixinCustomContainer",
        "item.inventory.MixinEntityCarriedInventory",
        "item.inventory.MixinTraitViewable",
        "item.inventory.MixinTraitInventory",
        "item.inventory.MixinTraitAdapter",
        "item.inventory.MixinSlot",
        "item.inventory.MixinSlotCrafting",
        "item.recipe.crafting.MixinIngredient",
        "item.recipe.crafting.MixinIRecipe",
        "item.recipe.crafting.MixinShapedRecipes",
        "item.recipe.crafting.MixinShapelessRecipes",
        "item.recipe.smelting.MixinFurnaceRecipes",
        "item.merchant.MixinMerchantRecipe",
        "nbt.MixinNBTTagCompound",
        "network.MixinNetHandlerPlayServer",
        "network.MixinNetworkManager",
        "network.MixinPacketBuffer",
        "network.packet.MixinSPacketResourcePackSend",
        "network.play.server.MixinSPacketChunkData",
        "network.play.server.MixinSPacketPlayerListItem",
        "network.play.server.MixinSPacketWorldBorder",
        "network.datasync.MixinDataParameter",
        "network.datasync.MixinEntityDataManager",
        "potion.MixinPotion",
        "potion.MixinPotionType",
        "potion.MixinPotionEffect",
        "scoreboard.MixinCollisionRule",
        "scoreboard.MixinCriterion",
        "scoreboard.MixinEnumVisible",
        "scoreboard.MixinScore",
        "scoreboard.MixinScoreboardClientCheck",
        "scoreboard.MixinScoreboardLogic",
        "scoreboard.MixinScoreboardObjectiveDisplayType",
        "scoreboard.MixinScoreObjective",
        "scoreboard.MixinScorePlayerTeam",
        "scoreboard.MixinServerScoreboardPacketSending",
        "server.MixinMinecraftServer",
        "server.MixinPlayerList",
        "server.management.MixinPlayerInteractionManager",
        "server.management.MixinPlayerChunkMap",
        "server.management.MixinPlayerChunkMapEntry",
        "server.management.MixinPlayerProfileCache",
        "server.management.MixinPlayerProfileCacheEntry",
        "server.network.MixinNetHandlerHandshakeTCP",
        "server.network.MixinNetHandlerLoginServer",
        "server.network.MixinNetHandlerLoginServerAnonThread",
        "sound.MixinSoundCategory",
        "sound.MixinSoundEvent",
        "stats.MixinStat",
        "stats.MixinStatisticsManager",
        "stats.MixinStatType",
        "status.MixinLegacyPingHandler",
        "status.MixinNetHandlerStatusServer",
        "status.MixinServerStatusResponse",
        "status.MixinServerStatusResponsePlayers",
        "status.MixinServerStatusResponseVersion",
        "text.MixinClickEvent",
        "text.MixinHoverEvent",
        "text.MixinTextComponentBase",
        "text.MixinTextComponentScore",
        "text.MixinTextComponentKeybind",
        "text.MixinTextComponentSelector",
        "text.MixinTextComponentString",
        "text.MixinTextComponentTranslation",
        "tileentity.MixinMobSpawnerBaseLogic",
        "tileentity.MixinTileEntity",
        "tileentity.MixinTileEntityBanner",
        "tileentity.MixinTileEntityBeacon",
        "tileentity.MixinTileEntityBrewingStand",
        "tileentity.MixinTileEntityChest",
        "tileentity.MixinTileEntityCommandBlock",
        "tileentity.MixinTileEntityComparator",
        "tileentity.MixinTileEntityDaylightDetector",
        "tileentity.MixinTileEntityDispenser",
        "tileentity.MixinTileEntityDropper",
        "tileentity.MixinTileEntityEnchantmentTable",
        "tileentity.MixinTileEntityEnderChest",
        "tileentity.MixinTileEntityEndGateway",
        "tileentity.MixinTileEntityEndPortal",
        "tileentity.MixinTileEntityFurnace",
        "tileentity.MixinTileEntityHopper",
        "tileentity.MixinTileEntityJukebox",
        "tileentity.MixinTileEntityLockable",
        "tileentity.MixinTileEntityLockableLoot",
        "tileentity.MixinTileEntityMobSpawner",
        "tileentity.MixinTileEntityNote",
        "tileentity.MixinTileEntityPiston",
        "tileentity.MixinTileEntityShulkerBox",
        "tileentity.MixinTileEntitySign",
        "tileentity.MixinTileEntitySkull",
        "tileentity.MixinTileEntityStructure",
        "tileentity.MixinTileEntityStructureMode",
        "util.MixinChatType",
        "util.MixinClassInheritanceMultiMap",
        "util.MixinCooldownTracker",
        "util.MixinCooldownTrackerServer",
        "util.MixinDamageSource",
        "util.MixinEntityDamageSource",
        "util.MixinEnumHand",
        "util.MixinIndirectEntityDamageSource",
        "util.MixinPacketThreadUtil",
        "util.MixinResourceLocation",
        "util.math.MixinVec3i",
        "village.MixinVillage",
        "world.MixinAnvilSaveHandler",
        "world.MixinBossInfo",
        "world.MixinBossInfoServer",
        "world.MixinChunk",
        "world.MixinChunkCache",
        "world.dimension.MixinDimensionType",
        "world.MixinExplosion",
        "world.MixinGameRules",
        "world.MixinNextTickListEntry",
        "world.MixinServerWorldEventHandler",
        "world.MixinTeleporter",
        "world.MixinWorldEntitySpawner",
        "world.MixinWorld",
        "world.MixinIBlockReader_API",
        "world.MixinITickList",
        "world.MixinIWorld_API",
        "world.MixinIWorld_Data",
        "world.MixinIWorldReaderBase_API",
        "world.MixinIWorldWriter_API",
        "world.MixinWorld_API",
        "world.MixinWorldBorder",
        "world.dimension.MixinDimension",
        "world.dimension.MixinOverworldDimension",
        "world.dimension.MixinNetherDimension",
        "world.MixinWorldServer",
        "world.MixinWorldServerMulti",
        "world.MixinWorldSettings",
        "world.MixinWorldType",
        "world.biome.MixinBiome",
        "world.chunk.MixinBlockStateContainer",
        "world.chunk.storage.MixinAnvilChunkLoader",
        "world.end.MixinDragonFightManager",
        "world.storage.MixinSaveHandler",
        "world.storage.MixinThreadedFileIOBase",
        "world.storage.MixinWorldInfo"
    ],
    "server": [
        "network.rcon.MixinRConConsoleSource",
        "network.rcon.MixinRConThreadClient",
        "server.MixinDedicatedPlayerList",
        "server.MixinDedicatedServer",
        "server.management.MixinUserList"
    ],
    "injectors": {
        "defaultRequire": 1
    },
    "overwrites": {
        "conformVisibility": true
    }
}
